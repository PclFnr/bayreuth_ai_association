3:I[9275,[],""]
4:I[1343,[],""]
5:I[1747,["231","static/chunks/231-829f56fdb7c75283.js","55","static/chunks/55-c141fc066ff4a19d.js","472","static/chunks/472-cd817ab664ce0632.js","185","static/chunks/app/layout-1cfcfb656b6cf4a5.js"],"Providers"]
6:I[1227,["231","static/chunks/231-829f56fdb7c75283.js","55","static/chunks/55-c141fc066ff4a19d.js","472","static/chunks/472-cd817ab664ce0632.js","185","static/chunks/app/layout-1cfcfb656b6cf4a5.js"],"Layout"]
7:I[231,["231","static/chunks/231-829f56fdb7c75283.js","55","static/chunks/55-c141fc066ff4a19d.js","548","static/chunks/app/docs/quick-start/page-9e62a996a9a754e8.js"],""]
0:["KteObhGWKN4CvpFO1QXQU",[[["",{"children":["docs",{"children":["quick-start",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":["quick-start",{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","quick-start","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","className":"h-full antialiased __variable_01f60e __variable_a0637f","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white dark:bg-zinc-900","children":["$","$L5",null,{"children":["$","$L6",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"min-w-0 max-w-2xl flex-auto px-4 py-16 lg:max-w-none lg:pl-8 lg:pr-0 xl:px-16","children":["$","div",null,{"className":"flex h-full flex-col items-center justify-center text-center","children":[["$","p",null,{"className":"font-display text-sm font-medium text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-3 font-display text-3xl tracking-tight text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-sm text-zinc-500 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$L7",null,{"href":"/","className":"mt-8 text-sm font-medium text-zinc-900 dark:text-white","children":"Go back home"}]]}]}],"notFoundStyles":[],"styles":null}]}]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/bayreuth_ai_association/_next/static/css/c6750efcaf6fd8ff.css","precedence":"next","crossOrigin":"$undefined"}]],"$L8"]]]]
9:I[4456,["231","static/chunks/231-829f56fdb7c75283.js","55","static/chunks/55-c141fc066ff4a19d.js","548","static/chunks/app/docs/quick-start/page-9e62a996a9a754e8.js"],"DocsHeader"]
a:I[7408,["231","static/chunks/231-829f56fdb7c75283.js","55","static/chunks/55-c141fc066ff4a19d.js","548","static/chunks/app/docs/quick-start/page-9e62a996a9a754e8.js"],"Fence"]
b:I[2553,["231","static/chunks/231-829f56fdb7c75283.js","55","static/chunks/55-c141fc066ff4a19d.js","548","static/chunks/app/docs/quick-start/page-9e62a996a9a754e8.js"],"PrevNextLinks"]
c:I[817,["231","static/chunks/231-829f56fdb7c75283.js","55","static/chunks/55-c141fc066ff4a19d.js","548","static/chunks/app/docs/quick-start/page-9e62a996a9a754e8.js"],"TableOfContents"]
2:[["$","div",null,{"className":"min-w-0 max-w-2xl flex-auto px-4 py-16 lg:max-w-none lg:pl-8 lg:pr-0 xl:px-16","children":[["$","article",null,{"children":[["$","$L9",null,{"title":"Quick start"}],["$","div",null,{"className":"prose prose-teal max-w-none dark:prose-invert dark:text-teal-200 prose-headings:scroll-mt-28 prose-headings:font-display prose-headings:font-normal lg:prose-headings:scroll-mt-[8.5rem] prose-lead:text-teal-500 dark:prose-lead:text-teal-400 prose-a:font-semibold dark:prose-a:text-teal-400 prose-a:no-underline prose-a:shadow-[inset_0_-2px_0_0_var(--tw-prose-background,#fff),inset_0_calc(-1*(var(--tw-prose-underline-size,4px)+2px))_0_0_var(--tw-prose-underline,theme(colors.teal.300))] hover:prose-a:[--tw-prose-underline-size:6px] dark:[--tw-prose-background:theme(colors.teal.900)] dark:prose-a:shadow-[inset_0_calc(-1*var(--tw-prose-underline-size,2px))_0_0_var(--tw-prose-underline,theme(colors.teal.800))] dark:hover:prose-a:[--tw-prose-underline-size:6px] prose-pre:rounded-xl prose-pre:bg-zinc-900 prose-pre:shadow-lg dark:prose-pre:bg-zinc-700/40 dark:prose-pre:shadow-none dark:prose-pre:ring-1 dark:prose-pre:ring-zinc-100/10 dark:prose-hr:border-teal-800","children":[["$","h2",null,{"id":""}],["$","p",null,{"children":"To get started with Dingo, you can install the framework using pip:"}],["$","$La",null,{"language":"bash","children":"pip install agent-dingo\n"}],["$","p",null,{"children":"Now we can create a simple pipeline that summarizes the text provided as input and translates it into French. In this particular example, we will use GPT-3.5 model from OpenAI, but Dingo supports other LLM providers as well."}],["$","p",null,{"children":["Firstly, make sure to set the ",["$","code",null,{"children":"OPENAI_API_KEY"}]," environment variable to your OpenAI API key:"]}],["$","$La",null,{"language":"bash","children":"export OPENAI_API_KEY=your-api-key\n"}],["$","p",null,{"children":"Next, create a new Python script and import the necessary modules:"}],["$","$La",null,{"language":"python","children":"from agent_dingo.llm.openai import OpenAI\nfrom agent_dingo.core.blocks import PromptBuilder\nfrom agent_dingo.core.message import UserMessage\nfrom agent_dingo.core.state import ChatPrompt\n"}],["$","p",null,{"children":"Then, define the pipeline by creating and chaining the building blocks together:"}],["$","$La",null,{"language":"python","children":"# Model\ngpt = OpenAI(\"gpt-3.5-turbo\")\n\n# Summary prompt block\nsummary_pb = PromptBuilder(\n    [UserMessage(\"Summarize the text in 10 words: ```{text}```.\")]\n)\n\n# Translation prompt block\ntranslation_pb = PromptBuilder(\n    [UserMessage(\"Translate the text into {language}: ```{summarized_text}```.\")],\n    from_state=[\"summarized_text\"],\n)\n\n# Pipeline\npipeline = summary_pb >> gpt >> translation_pb >> gpt\n"}],["$","p",null,{"children":"Finally, run the pipeline with the input text:"}],["$","$La",null,{"language":"python","children":"input_text = \"\"\"\nDingo is an ancient lineage of dog found in Australia, exhibiting a lean and sturdy physique adapted for speed and endurance, dingoes feature a wedge-shaped skull and come in colorations like light ginger, black and tan, or creamy white. They share a close genetic relationship with the New Guinea singing dog, diverging early from the domestic dog lineage. Dingoes typically form packs composed of a mated pair and their offspring, indicating social structures that have persisted through their history, dating back approximately 3,500 years in Australia.\n\"\"\"\n\noutput = pipeline.run(text = input_text, language = \"french\")\nprint(output)\n"}],["$","p",null,{"children":"To deploy the pipeline as a web service, you can use the following code:"}],["$","$La",null,{"language":"python","children":"#server.py\nfrom agent_dingo.serve import serve_pipeline\n\nserve_pipeline({\"gpt-summary-translation\": pipeline}, port=8000)\n"}],["$","p",null,{"children":"This will start a web server on port 8000, exposing the pipeline as a REST API. You can now send requests using any HTTP client, or even using the official OpenAI python client library:"}],["$","$La",null,{"language":"python","children":"# client.py\nimport openai\n\nclient = openai.OpenAI(base_url = \"http://localhost:8000\")\n\nmessages = [\n    {\"role\": \"context_text\", \"content\": \"<text to summarize>\"},\n    {\"role\": \"context_language\", \"content\": \"french\"},\n]\n\nout = client.chat.completions.create(messages = messages, model = \"gpt-summary-translation\")\nprint(out)\n"}],["$","p",null,{"children":["In this example, we have created a simple pipeline which is not designed for multi-turn conversations. To make it compatible with OpenAI Chat structure, Dingo defines special message roles like ",["$","code",null,{"children":"context_text"}]," and ",["$","code",null,{"children":"context_language"}]," which are used to pass the input arguments to the pipeline. Section ",["$","a",null,{"href":"/docs/core-overview","children":"Core"}]," goes into more details on differences between context and chat inputs and how to handle them in Dingo."]}]]}]]}],["$","$Lb",null,{}]]}],["$","$Lc",null,{"tableOfContents":[]}]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Quick start - Docs"}],["$","meta","3",{"name":"description","content":"Get started with Dingo."}],["$","link","4",{"rel":"icon","href":"/bayreuth_ai_association/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","5",{"name":"next-size-adjust"}]]
1:null
